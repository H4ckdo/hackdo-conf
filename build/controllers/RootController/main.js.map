{"version":3,"sources":["../../../controllers/RootController/main.js"],"names":["environment","process","env","NODE_ENV","store","AppRouter","importHot","require","cache","resolve","generateStore","main","req","res","preloadedState","getState","render","markup","path","url","module","exports"],"mappings":";;AAAA;;AACA;;;;AACA;;;;AACA,IAAIA,cAAcC,QAAQC,GAAR,CAAYC,QAAZ,IAAwB,aAA1C;AACA,IAAIC,cAAJ;AAAA,IAAWC,kBAAX;;AAEA,IAAMC,YAAY,SAAZA,SAAY,GAAM;AACtB,SAAOC,QAAQC,KAAR,CAAcD,QAAQE,OAAR,uCAAd,CAAP;AACA,SAAOF,QAAQC,KAAR,CAAcD,QAAQE,OAAR,+CAAd,CAAP;AACAL,UAAQG,+CAA2BG,aAA3B,EAAR;AACAL,cAAYE,sDAAZ;AACD,CALD;;AAOA,IAAIP,gBAAgB,YAApB,EAAkCM,Y,CAAY;;AAE9C;;;;;;AAMA,IAAMK,OAAO,SAAPA,IAAO,CAACC,GAAD,EAAMC,GAAN,EAAc;AACzB,MAAIb,gBAAgB,aAApB,EAAmCM;AACnC,MAAIQ,iBAAiBV,MAAMW,QAAN,EAArB;AACAF,MAAIG,MAAJ,CAAW,OAAX,EAAoB;AAClBhB,4BADkB;AAElBc,kCAFkB;AAGlBG,YAAQ,4BACN;AAAA;AAAA,QAAU,OAAOb,KAAjB;AACE,oCAAC,SAAD,IAAW,OAAOA,KAAlB,EAAyB,MAAMQ,IAAIM,IAAnC,EAAyC,KAAKN,IAAIO,GAAlD;AADF,KADM;AAHU,GAApB;AASD,CAZD;;AAcAC,OAAOC,OAAP,GAAiBV,IAAjB","file":"main.js","sourcesContent":["import { renderToString, renderToStaticMarkup } from 'react-dom/server';\nimport React from 'react';\nimport { Provider } from 'react-redux';\nlet environment = process.env.NODE_ENV || 'development';\nlet store, AppRouter;\n\nconst importHot = () => {\n  delete require.cache[require.resolve('stores/index.js')];\n  delete require.cache[require.resolve('components/AppRouter.js')];\n  store = require('stores/index.js').generateStore();\n  AppRouter = require('components/AppRouter.js');\n}\n\nif (environment === 'production') importHot();//in production the import should once\n\n/**\n * @function main\n * @param  {type} req {description}\n * @param  {type} res {description}\n * @return {type} Serve the App component\n */\nconst main = (req, res) => {\n  if (environment === 'development') importHot();\n  let preloadedState = store.getState();\n  res.render('index', {\n    environment,\n    preloadedState,\n    markup: renderToString(\n      <Provider store={store}>\n        <AppRouter store={store} path={req.path} url={req.url} />\n      </Provider>\n    )\n  })\n}\n\nmodule.exports = main;\n"]}